def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

def supportsNamespace() {
    def parsed = com.android.Version.ANDROID_GRADLE_PLUGIN_VERSION.tokenize('.')
    def major = parsed[0].toInteger()
    def minor = parsed[1].toInteger()

    // Namespace support was added in AGP 7.3.0
    if (major == 7 && minor >= 3) {
        return true
    }

    return major >= 8
}

buildscript {
    ext {
        kotlin_version = "1.7.21"
        agp_version = "7.2.1"
    }

    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:$agp_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    if (supportsNamespace()) {
        sourceSets {
            main {
                manifest.srcFile "src/main/AndroidManifestNew.xml" // no package on it
            }
        }
        namespace "com.scandit.datacapture.reactnative.core"
    }

    compileSdkVersion safeExtGet('compileSdkVersion', 23)

    defaultConfig {
        minSdkVersion safeExtGet('minSdkVersion', 32)
        targetSdkVersion safeExtGet('targetSdkVersion', 23)
        versionCode 1
        versionName "1.0"
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    def sdk_version = "6.23.1"

    println("Version of the native sdk used in this build: ${safeExtGet('global_sdk_version', sdk_version)}")
    if (findProject(':scandit-datacapture-frameworks-core') != null) {
        api project(":scandit-datacapture-frameworks-core")
    } else {
        api "com.scandit.datacapture.frameworks:core:${safeExtGet('global_sdk_version', sdk_version)}"
    }

    // For < 0.71, this will be from the local maven repo
    // For > 0.71, this will be replaced by `com.facebook.react:react-android:$version` by react gradle plugin
    //noinspection GradleDynamicVersion
    implementation 'com.facebook.react:react-native:+'  // From node_modules
}
